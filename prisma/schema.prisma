// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email    String @unique
  password String

  name    String
  Address Address[]
  Sale    Sale[]
}

model Category {
  id Int @id @default(autoincrement())

  name              String
  Category_Products Category_Products[]
}

model Category_Products {
  category_id Int
  product_id  Int

  category Category @relation(fields: [category_id], references: [id])
  product  Product  @relation(fields: [product_id], references: [id])

  @@id([category_id, product_id])
}

model Product {
  id           Int                 @id @default(autoincrement())
  name         String
  price        Float
  description  String
  image        String
  slug         String              @unique
  inventory    Int
  discount     Float               @default(0)
  sale_product Sale_Product[]
  categories   Category_Products[]
}

model Sale_Product {
  sale_id    Int
  product_id Int
  quantity   Int

  sale    Sale    @relation(fields: [sale_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@id([sale_id, product_id])
}

model Address {
  id Int @id @default(autoincrement())

  street     String
  number     String
  city       String
  state      String
  country    String
  zip        String
  complement String

  user_id Int
  user    User   @relation(fields: [user_id], references: [id])
  Sale    Sale[]
}

model Sale {
  id Int @id @default(autoincrement())

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  address_id Int
  address    Address @relation(fields: [address_id], references: [id])

  total_price  Float
  sale_date    DateTime
  status       String   @default("pending")
  payment_type String

  sale_product Sale_Product[]
}
